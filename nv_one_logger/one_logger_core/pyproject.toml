[project]
name = "nv-one-logger-core"
version = "2.3.0"
description = "Extensions to onelogger library to use Open telemetry (OTEL) as a backend."
authors = [{ name = "HWInf-MLWFO", email = "HWInf-MLWFO-E2E-Dev@exchange.nvidia.com" }]
requires-python = "~=3.8"
readme = "README.md"
license = "Apache-2.0"
dependencies = [
    "pydantic>=2.10.6,<3",
    "overrides>=7.7.0,<8",
    "StrEnum>=0.4.0,<0.5",
    "toml>=0.10.2,<0.11",
    "typing-extensions>=4.12.2,<5",
]

[project.urls]
Homepage = "https://github.com/NVIDIA/nv-one-logger"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=24.8.0,<25",
    "isort>=5.13.2,<6",
    "pre-commit>=3.5.0,<4",
    "mypy>=1.14.1,<2",
    "pytest>=8.3.4,<9",
    "pytest-cov>=5.0.0,<6",
    "annotated-types>=0.7.0,<0.8",
    "typing-extensions>=4.12.2,<5",
    "mypy-extensions>=1.0.0,<2",
    "flake8>=5.0.4,<6",
    "flake8-bugbear>=23.3.12,<24",
    "flake8-pyproject>=1.2.3,<2",
    "flake8-docstrings>=1.7.0,<2",
    "python-semantic-release>=9.8.3,<10",
]

[tool.uv]

# [[tool.uv.index]]
# name = "nv-shared-pypi"
# url = "https://urm.nvidia.com/artifactory/api/pypi/nv-shared-pypi/simple"

[tool.hatch.build.targets.sdist]
include = ["src/nv_one_logger"]

[tool.hatch.build.targets.wheel]
include = ["src/nv_one_logger"]

[tool.hatch.build.targets.wheel.sources]
"src/nv_one_logger" = "nv_one_logger"

[tool.black]
line-length = 160
target-version = ['py310']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 120
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.8"
strict = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = true
warn_unused_configs = true
warn_unreachable = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
ignore_missing_imports = true

[tool.flake8]
max-line-length = 160
max-complexity = 10
exclude = [".git", "__pycache__", "build", "dist", ".cache", ".venv",".txt",".md",".toml", ".lock"]
docstring_style = "google" 
ignore = ["D100", "D107", "W503"]

[tool.pytest.ini_options]
addopts = "-v"
testpaths = ["tests"]
pythonpath = ["src"]

[tool.coverage.run]
branch = true
source = ["src"]
command_line = "-m unittest discover -s tests/"

[tool.coverage.report]
fail_under = 80
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError"
]

